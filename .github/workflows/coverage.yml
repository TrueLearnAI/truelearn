name: Code Coverage
on:
  push:
    branches:
      - main
      - setup-ci
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Code_Coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          persist-credentials: false
          # otherwise, you will failed to push refs to dest repo
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4.4.0
        with:
          python-version: '3.10'
          cache: 'pip' #Cache dependencies

      - name: Install Project Dependencies
        run: pip install -r requirements.txt

      - name: Install Pytest
        run: pip install pytest

      #Note PyCov is an extended form of coverage.py
      - name: Install Pytest-cov
        run: pip install pytest-cov

      - name: Calculate coverage
        #Inc. branch + statement coverage
        run: |
          pytest --cov-branch --cov-report "xml:coverage.xml" --cov=truelearn_experiments unit_tests

      - name: Update CodeCov
        uses: codecov/codecov-action@v3
        with:
          #token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage.xml
          flags: Unit tests # optional
          # name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: ./coverage.xml
          hide-report: true


      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.PYTEST_COVERAGE_COMMENT }}
          gistID: 5e90d640f8c212ab7bbac38f72323f80
          filename: pytest-coverage-comment__main.json
          label: Coverage Report
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
          namedLogo: python

      - name: Commit & Push changes to Readme
        #if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions-js/push@master
        with:
          message: Update coverage on README.MD
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: github-actions
      

