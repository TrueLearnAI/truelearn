# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
        pypi_release_type:
            description: 'Release to TestPyPI or PyPI (testpypi or pypi)'
            required: true
            default: 'testpypi'


permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish_ref_unit_tests:
    uses: ./.github/workflows/unit_tests.yml

  publish_ref_static_analysis:
    uses: ./.github/workflows/static_analysis.yml

  deploy_to_pypi:
    runs-on: ubuntu-latest
    needs: [Unit_tests, Static_analysis]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      # Default to TestPyPI on workflow_dispatch and release
      # So that we can test the release process before publishing to PyPI
      # To publish to PyPI, set the pypi_release_type input to 'pypi' (has to be run manually)
      - name: Publish to TestPyPI
        if: ${{ github.event.release == 'true' || github.event.inputs.pypi_release_type == 'testpypi' }}
        uses: pypa/gh-action-pypi-publish@v1.8.3
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true

      - name: Publish to PyPI
        if: ${{ github.event.inputs.pypi_release_type == 'pypi' }}
        uses: pypa/gh-action-pypi-publish@v1.8.3
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

