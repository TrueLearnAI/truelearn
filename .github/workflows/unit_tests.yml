name: Unit Tests
on:
  push:
    branches:
      - main
    # filter on files that should trigger this workflow
    paths:
      - 'pyproject.toml'
      - '**.py'
      - '.github/workflows/unit_tests.yml'
  pull_request:
    # filter on files that should trigger this workflow
    paths:
      - 'pyproject.toml'
      - '**.py'
      - '.github/workflows/unit_tests.yml'
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        required: true
        default: 'testing'
        type: string
        description: 'Environment to run tests in (testing)'
    secrets:
      WIKIFIER_API_KEY:
        required: true
        description: 'Wikifier API Key'


# Only cancel concurrent runs of the same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-tests
  cancel-in-progress: true

jobs:
  unit_tests:
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    environment: ${{ inputs.environment }}

    env:
      WIKIFIER_API_KEY: ${{ secrets.WIKIFIER_API_KEY }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.4.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # cache dependencies
          cache-dependency-path: "pyproject.toml"

      - name: Install Project Dependencies
        run: |
          pip install .[tests]

        # Pytest generates an XML report
      - name: Execute tests
        run: |
          # Config in pyproject.toml
          # Calling via python adds the current directory to sys path
          # Prevents module not found errors
          python -m pytest --junitxml=unit_test_report.xml

        # Convert the XML report to GitHub annotations
      - name: Convert test results to Github Annotations
        uses: mikepenz/action-junit-report@v3
        # Only produce check run annotations if the tests fail
        if: failure()
        with:
          report_paths: unit_test_report.xml
          check_name: "Unit test Report"
          detailed_summary: true
