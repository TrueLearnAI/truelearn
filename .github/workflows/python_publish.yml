# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      pypi_release_type:
        description: "Release to TestPyPI or PyPI (testpypi or pypi)"
        required: true
        default: "testpypi"

permissions:
  contents: read

# Only cancel concurrent runs of the same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-publish
  cancel-in-progress: true

jobs:
  unit_tests:
    uses: ./.github/workflows/unit_tests.yml
    with:
      environment: testing
    secrets:
      WIKIFIER_API_KEY: ${{ secrets.WIKIFIER_API_KEY }}

  static_analysis:
    uses: ./.github/workflows/static_analysis.yml

  format_check:
    uses: ./.github/workflows/black.yml

  typo_check:
    uses: ./.github/workflows/typo.yml

  # To share the secrets between jobs, we need to use an environment which creates
  # multiple deployments. This action cleans up the GitHub PR when the deployments are
  # no longer needed.
  clean_deployments:
    uses: ./.github/workflows/clean_deployments.yml

  deploy_to_pypi:
    runs-on: ubuntu-latest
    needs: [unit_tests, static_analysis, format_check, typo_check]
    if: success()
    steps:
      - uses: actions/checkout@v3.5.2

      - name: Set up Python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.7"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      # Default to TestPyPI on workflow_dispatch and release
      # So that we can test the release process before publishing to PyPI
      # To publish to PyPI, set the pypi_release_type input to 'pypi' (has to be run manually)
      - name: Publish to TestPyPI
        if: ${{ github.event.inputs.pypi_release_type != 'pypi' }}
        uses: pypa/gh-action-pypi-publish@v1.8.3
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          verbose: true

      - name: Publish to PyPI
        if: ${{ github.event.inputs.pypi_release_type == 'pypi' }}
        uses: pypa/gh-action-pypi-publish@v1.8.3
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
